apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgresql.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgresql.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "postgresql.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: {{ include "postgresql.fullname" . }}
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{ include "postgresql.fullname" . }}
        - name: POSTGRESQL_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-admin-password
              name: {{ include "postgresql.fullname" . }}
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: {{ include "postgresql.fullname" . }}
       {{- if .Values.postgresql.logDestination }}
        - name: POSTGRESQL_LOG_DESTINATION
          value: {{ .Values.postgresql.logDestination }}
      {{- end }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          initialDelaySeconds: 120
          timeoutSeconds: 10
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            memory: {{ .Values.resources.limits.memory }}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: {{ include "postgresql.fullname" . }}-data
      {{- if .Values.monitor }}
        - name: extra-conf
          mountPath: /opt/app-root/src/postgresql-cfg
        - name: init-scripts
          mountPath: /opt/app-root/src/postgresql-init
      {{- end }}
      {{- if .Values.monitor }}
      - name: postgresql-exporter
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DATA_SOURCE_URI
          value: "$(POD_NAME):5432/postgres?sslmode=disable"
        - name: DATA_SOURCE_USER
          value: postgres
        - name: DATA_SOURCE_PASS
          valueFrom:
            secretKeyRef:
              key: database-admin-password
              name: {{ include "postgresql.fullname" . }}
        - name: DBNAME
          valueFrom:
            secretKeyRef:
              key: database-name
              name: {{ include "postgresql.fullname" . }}
        args:
        - "--auto-discover-databases"
        - "--extend.query-path=/etc/config.yaml"
        - "--log.format=json"
        # - "--log.level=debug"
        image: "quay.io/prometheuscommunity/postgres-exporter:latest"
        imagePullPolicy: IfNotPresent
        ports:
          - name: http
            containerPort: 9187
            protocol: TCP
        livenessProbe:
          initialDelaySeconds: 0
          timeoutSeconds: 1
          httpGet:
            path: /
            port: http
        readinessProbe:
          initialDelaySeconds: 0
          timeoutSeconds: 1
          httpGet:
            path: /
            port: http
        resources: {}
        volumeMounts:
          - name: queries
            mountPath: /etc/config.yaml
            subPath: config.yaml
        {{ end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: {{ include "postgresql.fullname" . }}-data
        persistentVolumeClaim:
          claimName: {{ include "postgresql.fullname" . }}
      {{- if .Values.monitor }}
      - name: queries
        configMap:
          defaultMode: 420
          name: {{ include "postgresql.fullname" . }}-common-exporter-queries
      - name: extra-conf
        configMap:
          defaultMode: 420
          name: {{ include "postgresql.fullname" . }}-conf
      - name: init-scripts
        configMap:
          name: {{ include "postgresql.fullname" . }}-init
          defaultMode: 0777
      {{ end }}